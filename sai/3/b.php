<?PHP
/**
 * @TODO 结果错误
 * @author wangtong1
 */

//$f = file("./s/input-2.txt");
$f = file('php://stdin');
$line = array_shift($f);

for($i=1; $i<=$line; $i++){
	$nums = array_shift($f);
	$m = 0;
	$n = 0;
	for($j=0; $j<$nums-1; $j++){
		$row = array_shift($f);
		$rows = explode(" ", $row);
		if($j==0){
			$arr[0][0] = $rows[1];
			$y[$rows[1]] = 0;
			$x[$rows[1]] = 0;
		}
		// ¼Ç×¡½ÚµãµÄy×ø±ê
		if(isset($y[$row[1]])){
			$y[$row[0]] = $y[$row[1]]+1;
		}elseif(isset($y[$row[0]])){
			$y[$row[1]] = $y[$row[0]]-1;
		}
		// x×ø±ê
		if($rows[2] == 2){
			$x[$row[0]] = $x[$row[1]] - 1;
		}else{
			$x[$row[0]] = $x[$row[1]] + 1;
		}
		// ½á¹ûÊý×é
		$arr[$x[$row[0]]][$y[$rows[0]]] = $rows[0];

		
	}
}

var_dump($arr);



/*
树交换
题目描述：
给出一个二叉树，将树中每个节点的左右儿子交换，输出交换后的树的先序
遍历和中序遍历。比如：
转换前：
    1
    / \
2      3
      /    \
    4        5
交换后：
      1
    /    \
3        2
       /    \
    5        4
交换后的先序遍历： 1 3 2 5 4
交换后的中序遍历： 3 1 5 2 4
输入：
输入第一行是 T（1<= T <=10），表示有 T 组测试数据。
接下来的每组测试数据，第一行是一个正整数 n（0<n<1000），表示二叉树
有 n 个节点。节点用 1…n 来表示。
接下来的 n-1 行，每行三个正整数 i  j k，中间用一个空格分开，表示节点 i
的父节点是 j，其中 k=1 表示 i 是 j 的左儿子，k=2 表示 i 是 j 的右儿子。
输出：
对于每组数据，输出两行，第一行是交换后的树先序遍历，第二行是交换后
的树中序遍历，节点之间用一个空格分开。
样例输入：
1
5
3 1 2
2 1 1
5 2 2
4 2 1
样例输出：
1 3 2 5 4
3 1 5 2 4

*/
