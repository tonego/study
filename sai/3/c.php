<?php
/**
 * @desc  思路：对所有人的金额排序，最高的效率应该是：最高的给最低的打款,第二高给第二低打款[偶数个人]，
            计算出流动金额总和 ,计算出手续费总和, 计算出每个人的金额
 *          如10和20, 则 10+0.8x=20-x 
 * @author wangtong1@xiaomi.com
 */

$file = file_get_contents("php://stdin");
$f = explode(PHP_EOL,$file);
$k = 0;
$group = $f[$k++];
for($g=0; $g<$group; $g++){

    list($line, $rate) = explode(' ',$f[$k++]);
    $p = explode(' ',$f[$k++]);
    $t = 0; //总金额
    foreach($p as $pk=>$pv){
        $t += $pv;
    }

}











































/**
分奖金
题目描述：
有n个选手在一次编程比赛中获得了比赛奖金，但是最后在发奖金的过程中，
入账时发错了账户，也没法知道原来每个选手应得的奖金。
于是经过讨论，大家希望通过转账，使得最后所有人都拿到相同的奖金，但
每次转账银行都要收取 k%的手续费，大家都希望最后分到的钱尽可能多，那么，
最后大家能分到的奖金是多少？
输入：
输入第一行为 T，表示一共有 T(T  <=  10)组测试数据。
对于每组数据，第一行是一个整数 n 和浮点数 k，（1<=n<=100000,    0<k<1）。
分别表示有 n 个选手，银行手续费率是 k。
接下来的一行，有 n 个正整数 ai  (1<=i<=n)，表示每个选手刚开始收到的奖
金数。( 0<= ai  <=10000)
输出：
对于每组数据，输出最后大家能平均分到的最多的奖金，精确到小数点后 2
位。
样例输入：
1
2   0.2
10  20
样例输出：
14.44


*/
